ftoi  -1.5--0.50001 -1 -0.5-0.49999 0 0.5-1.49999 1

128*128

base
返り値レジスタ変更
575,427,658 11/28 13:31
lui, ori 0をaddi x0, 0に、fle, feqのaddi x31, x31, -1を消してラベル順を逆に
545,156,072 11/28 19:09
不要lui削除
500,773,124 11/29 10:22

contest
返り値レジスタ変更
8,846,196,392 11/28 13:35
lui, ori 0をaddi x0, 0に、fle, feqのaddi x31, x31, -1を消してラベル順を逆に
8,415,287,912 11/28 19:09
不要lui削除
7,752,569,864 11/29 10:25
(
inline letrecも消さないとfiszero等が消えない
10 fiszero-fsqrが全部消えた
5,013,801,079
20 floorが消えた int_of_float, float_of_intが増えた
4,958,772,272
30 int_of_float, float_of_intが増えた
4,912,397,918
)
cse
8,456,675,157 !?
cse inline10
4,826,147,682 12/1 18:26
cse inline20
4,791,711,877 12/2 15:49
cse inline50
3,839,620,140
cse delete_label_seq inline10
4,804,810,273 12/2 17:15
即値のセットを全てaddiに inline10
4,804,605,871
f0を0.0レジスタに（返り値はx4f1に） inline10
4,774,356,461 12/4 23:35
stack直した inline10
4,772,063,816 12/5 11:29
浮動小数点数ラベルを余分なレジスタに入れてロードを減らす inline10
4,726,219,642 12/6 17:40
sqrtをmincamlで書いた inline10
4,691,913,863 12/7 19:10
グローバル配列のアドレスをコンパイル時に決定 inline10
4,452,778,369 12/14 19:53
reg_hp_init変えた（not最適化） inline10
4,452,778,369 12/14 23:19
inline20
4,373,393,829
inline30
4,278,314,397
inline40
4,200,582,856
bool値の最適化 inline10
4,383,188,405 12/15 14:54
bool値の最適化改良1 inline10
4,321,316,661 12/15 16:54
inline40
4,067,859,028
インライン展開で再帰関数を展開しないように inline50
4,119,612,297 12/20 16:12
inline80
3,868,248,349 12/20 16:19
入出力仕様変更、x29, x30を使えるように inline80
3,864,172,291 12/22 16:36
4レジスタx30 inline80
3,479,685,620 12/23 14:55
global, libraryの順番変更 inline80
3,514,608,186 12/25 22:43
グローバル変数のアドレスを完全に定数に inline80
3,404,811,225 12/26 0:04
cse改良 関数適用があってもその関数に副作用がなければ副作用なしと判定 inline80
3,404,808,925 12/27 14:20
inline307
3,090,754,968 1/1 16:31
int_of_floatの幅を1→4に変更、4.0レジスタf30追加
2,993,366,827 1/3 22:52
float_of_intの幅を1→4に変更、int_of_float, float_of_int末尾再帰化
2,965,130,560 1/6 16:34
タプル平坦化 inline307
2,965,130,560 1/7 22:10
cse改善（修正）、elimのeffect判定を緩く inline307
2,899,181,466 1/8 14:58
int_of_floatを切り捨て→四捨五入に　それに伴ってfloorも変更
2,910,207,182 1/16 16:17
f定数レジスタに入れる定数を変更
2,895,784,630 1/17 22:35
float_of_intアセンブリ実装
2,887,169,922 1/18 1:12
solve_each_element_fastのインライン展開
3,012,421,619 1/25 17:26
solve_one_or_network_fastとサイズ20以下のインライン展開
3,007,601,394 1/26 0:43
ジャンプ連鎖除去
3,004,188,304 1/29 19:44
addiの即値を17bitに変更
2,768,122,240 1/29 22:41
feq, fle変更
2,661,102,046 2/1 0:32
自作アセンブリ関数前後のロード、ストア削減
2,660,771,116 2/2 0:04
float定数レジスタ導入で生じた不要fadd削除
2,644,497,198 2/4 18:01
関数前後、分岐前のロードストア削減（再帰呼び出し以外）
2,634,667,797 2/7 12:33
int_of_float, floorアセンブリ実装
2,620,138,518 2/8 18:18
cseasm
2,491,093,697 2/9 17:28
betaasm
2,343,488,379 2/9 18:30
constfoldasm
2,343,487,614 2/9 21:38
elimasm
2,337,461,738 2/9 23:25
simmとasm_optの順序変更
2,331,457,176 2/10 15:02
regallocとかマイナーチェンジ
2,331,434,681 2/10 21:16
int_of_float変更
2,330,957,985 2/10 23:22
cseでPutがあったら該当配列の該当インデックスへのGetのみをenv_getから消す
2,318,517,818 2/11 22:18
cseAsmのLd, Stを↑と同じように修正、不要jal削除
2,308,811,337 2/13 0:41
グローバル変数導入
1,951,963,624 2/17 2:39
整数定数レジスタ導入
1,848,417,365 2/18 20:42
print_int仕様変更
1,952,742,645 2/25 14:43

256*256

base
不要lui削除
1,843,649,653

contest
不要lui削除
25,271,087,595
reg_hp_init変えた（not最適化）
14,543,251,477 12/14 23:19
bool値の最適化改良1 inline40
13,264,133,478
入出力仕様変更、x29, x30を使えるように inline80
12,635,804,359 12/22 16:36
グローバル変数のアドレスを完全に定数に inline80
11,166,574,253 12/26 0:04
inline307
10,152,186,645 1/1 16:31
int_of_floatの幅を1→4に変更、4.0レジスタf30追加
9,766,786,158 1/3 22:52
float_of_intの幅を1→4に変更、int_of_float, float_of_int末尾再帰化
9,634,206,931 1/6 16:34
タプル平坦化 inline307
9,634,206,931 1/7 22:10
cse改善（修正）、elimのeffect判定を緩く inline307
9,416,664,373 1/8 14:58
int_of_floatを切り捨て→四捨五入に　それに伴ってfloorも変更
9,456,652,418 1/16 16:17
f定数レジスタに入れる定数を変更
9,407,375,370 1/17 22:35
float_of_intアセンブリ実装
9,375,012,677 1/18 1:12
addiの即値を12bitに直した
10,132,272,871 1/24 23:52
solve_each_element_fastのインライン展開
9,786,943,500 1/25 17:26
solve_one_or_network_fastとサイズ20以下のインライン展開
9,770,858,450 1/26 0:43
ジャンプ連鎖除去
9,759,956,993 1/29 19:44
addiの即値を17bitに変更
8,992,452,527 1/29 22:41
feq, fle変更
8,645,034,609 2/1 0:32
自作アセンブリ関数前後のロード、ストア削減
8,644,342,975 2/2 0:04
float定数レジスタ導入で生じた不要fadd削除
8,588,875,443 2/4 18:01
関数前後、分岐前のロードストア削減（再帰呼び出し以外）
8,557,438,653 2/7 12:33
int_of_float, floorアセンブリ実装
8,502,347,063 2/8 18:18
cseasm
8,080,134,043 2/9 17:28
betaasm
7,602,075,376 2/9 18:30
constfoldasm
7,602,073,846 2/9 21:38
elimasm
7,582,861,820 2/9 23:25
simmとasm_optの順序変更
7,563,733,834 2/10 15:02
regallocとかマイナーチェンジ
7,563,710,571 2/10 21:16
int_of_float変更
7,562,149,643 2/10 23:22
cseでPutがあったら該当配列の該当インデックスへのGetのみをenv_getから消す
7,521,703,979 2/11 22:18
cseAsmのLd, Stを↑と同じように修正、不要jal削除
7,489,904,566 2/13 0:41
グローバル変数導入
6,330,317,336 2/17 2:39
整数定数レジスタ導入
5,994,243,157 2/18 20:42
print_int仕様変更
6,334,412,572 2/25 14:43

512*512

base
87 11/23 18:00
86 11/23 23:04
86 11/23 23:56
70 11/25 15:56
fix fneg
87 11/27 19:00
返り値レジスタ変更
82 11/27 20:07
lui, ori 0をaddi x0, 0に、fle, feqのaddi x31, x31, -1を消してラベル順を逆に
78 11/27 21:38
不要lui削除
72 11/29 10:57

contest
1119 11/23 18:00
995  11/23 23:26
995  11/24 0:15
995  11/24 14:50
959  11/26 19:21 -> 退化
fix fneg
1068 11/27 19:32 -> 完動
返り値レジスタ変更
1011 11/27 20:24
lui, ori 0をaddi x0, 0に、fle, feqのaddi x31, x31, -1を消してラベル順を逆に
962  11/27 21:27
不要lui削除
886 11/29 11:16
cse inline10
554 12/1 18:26
f0を0.0レジスタに（返り値はx4f1に） inline10
548 12/4 23:35
浮動小数点数ラベルを余分なレジスタに入れてロードを減らす inline10
541 12/6 17:40
sqrtをmincamlで書いた inline10
538 12/7 19:10
グローバル配列のアドレスをコンパイル時に決定 inline10
511 12/14 19:53
reg_hp_init変えた（not最適化） inline10
511 12/14 23:19
bool値の最適化 inline10
503 12/15 14:54
bool値の最適化改良1 inline10
496 12/15 16:54
インライン展開で再帰関数を展開しないように inline80
444 12/20 16:19
入出力仕様変更 inline80
444 12/22 16:36
4レジスタ inline80
401 12/23 14:55
global, libraryの順番変更 inline80
406 12/25 22:43
グローバル変数のアドレスを完全に定数に inline80
394 12/26 0:04
inline307
359 1/1 16:31
float_of_intの幅を1→4に変更、int_of_float, float_of_int末尾再帰化
336 1/6 16:34
cse改善（修正）、elimのeffect判定を緩く inline307
328 1/8 14:58
int_of_floatを切り捨て→四捨五入に　それに伴ってfloorも変更
330 1/16 16:17
f定数レジスタに入れる定数を変更
328 1/17 22:35
float_of_intアセンブリ実装
327 1/18 1:12
solve_each_element_fastのインライン展開
341 1/25 17:26
solve_one_or_network_fastとサイズ20以下のインライン展開
341 1/26 0:43
ジャンプ連鎖除去
340 1/29 19:44
addiの即値を17bitに変更
313 1/29 22:41
feq, fle変更
301 2/1 0:32
自作アセンブリ関数前後のロード、ストア削減
301 2/2 0:04
float定数レジスタ導入で生じた不要fadd削除
299 2/4 18:01
関数前後、分岐前のロードストア削減（再帰呼び出し以外）
298 2/7 12:33
int_of_float, floorアセンブリ実装
296 2/8 18:18
cseasm
281 2/9 17:28
betaasm
265 2/9 18:30
constfoldasm
265 2/9 21:38
elimasm
264 2/9 23:25
simmとasm_optの順序変更
263 2/10 15:02
regallocとかマイナーチェンジ
263 2/10 21:16
int_of_float変更
263 2/10 23:22
cseでPutがあったら該当配列の該当インデックスへのGetのみをenv_getから消す
262 2/11 22:18
cseAsmのLd, Stを↑と同じように修正、不要jal削除
261 2/13 0:41
グローバル変数導入
220 2/17 2:39
整数定数レジスタ導入
208 2/18 20:42
print_int仕様変更
220 2/25 14:43

charhan
734 11/26 1:30